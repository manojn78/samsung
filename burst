#include<vector>
#include<iostream>
#include<climits>
using namespace std;

int burst(int i,int j,vector<int>& nums,vector<vector<int>>& dp)
{
    if(i>j)
    return 0;
    int maxi=INT_MIN,cost;
    if(dp[i][j]!=-1)
    return dp[i][j];
    for(int ind=i;ind<=j;ind++)
    {
cost=(nums[i-1]*nums[ind]*nums[j+1])+burst(i,ind-1,nums,dp)+burst(ind+1,j,nums,dp);
        maxi=max(cost,maxi);
    }
    return dp[i][j]=maxi;
}
    int main() {
        vector<int> nums;
        int x;

        while(cin>>x)
        {
            nums.push_back(x);
        }
        
        int j=nums.size();
        nums.push_back(1);
        nums.insert(nums.begin(),1);
        int i=1;
        vector<vector<int>> dp(j+1,vector<int> (j+1,-1));
        int cost=burst(i,j,nums,dp);
        cout<<cost;
        return 0;
    }
